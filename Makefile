export PATH := /opt/gcc-4.8.1/bin:$(PATH)

# generate config file
$(shell ./build_deps.sh build_config.mk)
# this file is generated by the previous line to set build flags
include build_config.mk

ROCKSDB=$(DEPS_DIR)/$(ROCKSDB_VER)

OPT += -g -O2 -DNDEBUG
OPT += -Wall -Werror -Wsign-compare
export CGO_CFLAGS=$(OPT) -I$(ROCKSDB)/include
export CGO_LDFLAGS=-L$(ROCKSDB) -lrocksdb -lsnappy -lz

GO_FLAGS  = -v -x --ldflags '-extldflags "-static-libstdc++"'
#GO_FLAGS = -v -x --ldflags '-extldflags "-static-libstdc++ -static-libgcc"'
#GO_FLAGS = -v -x --ldflags '-extldflags "-static"'

all: build rocksdb-clean

build: rocksdb-lib
	go install $(GO_FLAGS) ./...

get: rocksdb-lib
	go get -v -x ./...

clean: rocksdb-clean
	go clean -i ./...

rocksdb-clean:
	rm build_config.mk
	rm -rf $(ROCKSDB)

rocksdb-lib:
	if [ ! -f "$(ROCKSDB)/librocksdb.a" ]; then \
		rm -rf $(ROCKSDB); \
		./build_deps.sh -dl; \
		tar zxf $(ROCKSDB).tar.gz -C $(DEPS_DIR); \
		make -C $(ROCKSDB) static_lib; \
	fi

gotable-server: rocksdb-lib
	go install $(GO_FLAGS) ./cmd/$@

gotable-cli:
	go install $(GO_FLAGS) ./cmd/$@

gotable-bench:
	go install $(GO_FLAGS) ./cmd/$@

